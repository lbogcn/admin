{"version":3,"sources":["ajax.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ajax.js","sourcesContent":["define(['jquery'], function($) {\r\n    function handle(url, params, type, showError) {\r\n        showError = showError || true;\r\n\r\n        return $.ajax({\r\n            url: url,\r\n            data: params || {},\r\n            type: type || 'GET',\r\n            dataType: 'json',\r\n            headers: {\r\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\r\n            }\r\n        }).then(function (resp, status, xhr) {\r\n            // 成功回调\r\n            if (resp.code == 0) {\r\n                // 直接返回要处理的数据，作为默认参数传入之后done()方法的回调\r\n                return resp.data;\r\n            } else {\r\n                // 返回一个失败状态的deferred对象，把错误代码作为默认参数传入之后fail()方法的回调\r\n                return $.Deferred().reject(xhr, resp.msg);\r\n            }\r\n        }, function (xhr) {\r\n            return $.Deferred().reject(xhr);\r\n        }).fail(function(xhr, msg) {\r\n            if (!msg) {\r\n                msg = 'URL：' + url + \"\\n\" + '网络请求失败！' + \"\\n\" + xhr.status + '：' + xhr.statusText;\r\n                console.log(xhr);\r\n            }\r\n\r\n            if (showError) {\r\n                alert(msg);\r\n            }\r\n        });\r\n    }\r\n\r\n    return {\r\n        apiGet: function(url, params) {\r\n            return handle(url, params);\r\n        },\r\n        apiPost: function(url, params) {\r\n            return handle(url, params, 'POST');\r\n        },\r\n        apiPut: function(url, params) {\r\n            return handle(url, params, 'PUT');\r\n        },\r\n        apiPatch: function(url, params) {\r\n            return handle(url, params, 'PATCH');\r\n        },\r\n        apiDelete: function(url, params) {\r\n            return handle(url, params, 'DELETE');\r\n        },\r\n        handle: handle\r\n    };\r\n});"]}