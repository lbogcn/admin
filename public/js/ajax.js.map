{"version":3,"sources":["ajax.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ajax.js","sourcesContent":["define(['jquery'], function($) {\r\n    // 生成ajax对象\r\n    function build(url, params, type) {\r\n        return $.ajax({\r\n            url: url,\r\n            data: params || {},\r\n            type: type || 'GET',\r\n            dataType: 'json',\r\n            headers: {\r\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\r\n            }\r\n        });\r\n    }\r\n\r\n    // 处理\r\n    function handle(url, params, type) {\r\n        return build(url, params, type).then(function (resp) {\r\n            // 成功回调\r\n            if (resp.code == 0) {\r\n                return resp.data; // 直接返回要处理的数据，作为默认参数传入之后done()方法的回调\r\n            } else {\r\n                return $.Deferred().reject(resp); // 返回一个失败状态的deferred对象，把错误代码作为默认参数传入之后fail()方法的回调\r\n            }\r\n        }, function (xhr) {\r\n            console.log(xhr);\r\n            alert(url + \"\\n\" + '网络请求失败！');\r\n        });\r\n    }\r\n\r\n    // handle('/').done(function (resp) {\r\n    //     // 当result为true的回调\r\n    // }).fail(function (err) {\r\n    //     console.log(err);\r\n    // });\r\n\r\n    return {\r\n        apiGet: function(url, params) {\r\n            return handle(url, params);\r\n        },\r\n        apiPost: function(url, params) {\r\n            return handle(url, params, 'POST');\r\n        },\r\n        apiPut: function(url, params) {\r\n            return handle(url, params, 'PUT');\r\n        },\r\n        apiPatch: function(url, params) {\r\n            return handle(url, params, 'PATCH');\r\n        },\r\n        apiDelete: function(url, params) {\r\n            return handle(url, params, 'DELETE');\r\n        }\r\n    };\r\n});"]}